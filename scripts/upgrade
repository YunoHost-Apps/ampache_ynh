#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If secret_key doesn't exist, create it
if [ -z "${secret_key:-}" ]; then
	secret_key="$(grep "^secret_key" "$install_dir/config/ampache.cfg.php" | cut -d'"' -f2)"
	ynh_app_setting_set --app=$app --key=secret_key --value=$secret_key
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=3

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep="config/ampache.cfg.php"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=2

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --usage=low --footprint=low

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=3

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE AMPACHE WITH COMPOSER
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
    ynh_script_progression --message="Upgrading ampache with Composer..." --weight=30

    # Install composer
    ynh_install_composer --workdir=$install_dir
    ynh_composer_exec --phpversion="${YNH_PHP_VERSION}" --workdir="$install_dir" --commands="config discard-changes true"
fi

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="../conf/ampache.cfg.php" --destination="$install_dir/config/ampache.cfg.php"

chmod 600 "$install_dir/config/ampache.cfg.php"
chown $app: "$install_dir/config/ampache.cfg.php"

#=================================================
# UPDATE MULTIMEDIA DIRECTORIES
#=================================================
ynh_script_progression --message="Updating multimedia directories..."

ynh_multimedia_build_main_dir

#=================================================
# UPGRADE AMPACHE WITH CURL
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
    ynh_local_curl /update.php?action=update
    sleep 1
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..." --weight=1

mkdir -p "/var/log/$app"
chown $app: "/var/log/$app"
# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
